1.insertting a new clumn in to the table:
alter table resto add area varchar(255);

subqueries:
1.Write a query to display all the orders for the salesman who belongs to the city London

SELECT *FROM ordersWHER E salesman_id =(SELECT salesman_id FROM salesman WHERE city='London');

2.Write a query in SQL to find the first name and last name of employees working for departments which sanction amount is second lowest.

SELECT emp_fname, emp_lname 
FROM emp_details WHERE emp_dept IN (SELECT dpt_code FROM emp_department WHERE dpt_allotment= (SELECT MIN(dpt_allotment)FROM emp_department
   WHERE dpt_allotment >(SELECT MIN(dpt_allotment) FROM emp_department )));
3.Write a SQL query to display the average price of the products which is more than or equal to 350 along with their names.

SELECT AVG(pro_price) AS "Average Price", company_mast.com_name AS "Company" FROM item_mast, company_mast
         WHERE item_mast.pro_com= company_mast.com_id GROUP BY company_mast.com_name HAVING AVG(pro_price) >= 350;

4.Write a query in SQL to find the names of departments with more than two employees are working.

SELECT dpt_name FROM emp_department
  WHERE dpt_code IN(SELECT emp_dept FROM emp_details GROUP BY emp_dept HAVING COUNT(*) >2);
5.Write a query to count the customers with grades above New York's average.

SELECT grade, COUNT (*) FROM customer GROUP BY grade HAVING grade > (SELECT AVG(grade) FROM customer WHERE city = 'New York');

6.Write a query to find the salesmen who have multiple customers.

SELECT * 
FROM salesman WHERE salesman_id IN (SELECT DISTINCT salesman_id FROM customer a WHERE EXISTS (SELECT * FROM customer b 
      WHERE b.salesman_id=a.salesman_id AND b.cust_name<>a.cust_name));

Joins:
Inner Join:
SELECT Orders.OrderID, Customers.CustomerName
FROM Orders
INNER JOIN Customers ON Orders.CustomerID = Customers.CustomerID;

Left Join:
SELECT Customers.CustomerName, Orders.OrderID
FROM Customers
LEFT JOIN Orders ON Customers.CustomerID = Orders.CustomerID
ORDER BY Customers.CustomerName;

Right Join:
SELECT Orders.OrderID, Employees.LastName, Employees.FirstName
FROM Orders
RIGHT JOIN Employees ON Orders.EmployeeID = Employees.EmployeeID
ORDER BY Orders.OrderID;

Full Join:
SELECT Customers.CustomerName, Orders.OrderID
FROM Customers
FULL OUTER JOIN Orders ON Customers.CustomerID=Orders.CustomerID
ORDER BY Customers.CustomerName;